// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzeria;

#nullable disable

namespace Pizzeria.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250119190327_UpdateImageColumnToBlob")]
    partial class UpdateImageColumnToBlob
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pizzeria.Model.Functie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Functies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naam = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Naam = "Bakker"
                        },
                        new
                        {
                            Id = 3,
                            Naam = "Bezorger"
                        });
                });

            modelBuilder.Entity("Pizzeria.Model.Medewerker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FunctieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FunctieId");

                    b.ToTable("Medewerkers");
                });

            modelBuilder.Entity("Pizzeria.Model.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("blob");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("pizza", (string)null);
                });

            modelBuilder.Entity("Pizzeria.Model.Medewerker", b =>
                {
                    b.HasOne("Pizzeria.Model.Functie", "Functie")
                        .WithMany()
                        .HasForeignKey("FunctieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Functie");
                });
#pragma warning restore 612, 618
        }
    }
}
