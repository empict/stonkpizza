// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzeria;

#nullable disable

namespace Pizzeria.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pizzeria.Model.Bestelling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AangemaaktOp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KlantId")
                        .HasColumnType("int");

                    b.Property<int?>("KlantId1")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId1")
                        .HasColumnType("int");

                    b.Property<decimal>("TotaalBedrag")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.HasIndex("KlantId1");

                    b.HasIndex("StatusId");

                    b.HasIndex("StatusId1");

                    b.ToTable("Bestellingen");
                });

            modelBuilder.Entity("Pizzeria.Model.BestellingPizza", b =>
                {
                    b.Property<int>("BestellingId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("BestellingId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("BestellingPizzas");
                });

            modelBuilder.Entity("Pizzeria.Model.Functie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Functies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naam = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Naam = "Bakker"
                        },
                        new
                        {
                            Id = 3,
                            Naam = "Bezorger"
                        });
                });

            modelBuilder.Entity("Pizzeria.Model.Klant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Klanten");
                });

            modelBuilder.Entity("Pizzeria.Model.Medewerker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FunctieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FunctieId");

                    b.ToTable("Medewerkers");
                });

            modelBuilder.Entity("Pizzeria.Model.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("blob");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("pizza", (string)null);
                });

            modelBuilder.Entity("Pizzeria.Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Statussen");
                });

            modelBuilder.Entity("Pizzeria.Model.Bestelling", b =>
                {
                    b.HasOne("Pizzeria.Model.Klant", "Klant")
                        .WithMany()
                        .HasForeignKey("KlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria.Model.Klant", null)
                        .WithMany("Bestellingen")
                        .HasForeignKey("KlantId1");

                    b.HasOne("Pizzeria.Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria.Model.Status", null)
                        .WithMany("Bestellingen")
                        .HasForeignKey("StatusId1");

                    b.Navigation("Klant");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pizzeria.Model.BestellingPizza", b =>
                {
                    b.HasOne("Pizzeria.Model.Bestelling", "Bestelling")
                        .WithMany("BestellingPizzas")
                        .HasForeignKey("BestellingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria.Model.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestelling");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizzeria.Model.Medewerker", b =>
                {
                    b.HasOne("Pizzeria.Model.Functie", "Functie")
                        .WithMany()
                        .HasForeignKey("FunctieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Functie");
                });

            modelBuilder.Entity("Pizzeria.Model.Bestelling", b =>
                {
                    b.Navigation("BestellingPizzas");
                });

            modelBuilder.Entity("Pizzeria.Model.Klant", b =>
                {
                    b.Navigation("Bestellingen");
                });

            modelBuilder.Entity("Pizzeria.Model.Status", b =>
                {
                    b.Navigation("Bestellingen");
                });
#pragma warning restore 612, 618
        }
    }
}
